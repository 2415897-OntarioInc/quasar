#!/usr/bin/env bash
#
# Helper for running only a specific test (not the whole spec.)
#

shopt -s globstar
# set -euo pipefail
IFS=$'\n\t'

specificationClassNames () {
  find **/test-classes -name '*Spec*.class' \
    | egrep -v '[$]' \
    | perl -pe 's#.*?test[-]classes/##' \
    | perl -pe 's/[.]class$//' \
    | tr '/' '.'
}

individualTestNames () {
  ag -o --nocolor --nofilename --nogroup '(?<= )("[^"].*?")(?=[ ](in|should)\b)' **/src/test | sort -u
}

matchingFiles () {
  ag --files-with-matches "$@" -- **/src/test
}

if [[ $# -eq 0 ]]; then
  individualTestNames
  exit 0
fi

declare -a specs=()
declare -a tests=( $( individualTestNames | ag "$@" ) )
declare -a matches=()

# individualTestNames | ag "$@" | while read t; do tests+="$t"; done

# ( "${tests[@]}" "$t" ); done

# ( "$(individualTestNames | egrep "$@")" )

files="$(matchingFiles "$@")"
classes="$(specificationClassNames)"
projects="$(matchingFiles "$@" | perl -pe 's#/.*##' | sort -u )"

for cn in $classes; do
  simple="${cn##*.}" && ag --files-with-matches -w "$simple" -- $files >/dev/null && matches=( "${matches[@]}" "$cn" )
done

echo "./sbt testOnly \\"

for m in "${matches[@]}"; do
  echo "    $m \\"
done

echo "  -- \\"

for test in "${tests[@]}"; do
  echo "    -ex $test \\"
done

echo ""

