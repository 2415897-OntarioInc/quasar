{
  "name": "date_part with all selectors, after conversion to JS (see #1238)",

  "backends": {
      "mongodb_2_6":       "pending",
      "mongodb_3_0":       "pending",
      "mongodb_read_only": "pending",
      "mongodb_3_2":       "pending",
      "postgresql":        "pending",
      "marklogic":         "skip",
      "couchbase":         "skip"
  },

  "data": "../slamengine_commits.data",

  "nb": "Currently pending for Mongo because the shape is somehow not handled for JS.
         Also `doy` and `week` are missing because we currently have no JS implementation.",
  "query": "select
              date_part(\"millennium\", timestamp(commit.committer.date)) as millenium,
              date_part(\"century\", timestamp(commit.committer.date)) as century,
              date_part(\"decade\", timestamp(commit.committer.date)) as decade,
              date_part(\"year\", timestamp(commit.committer.date)) as year,
              date_part(\"quarter\", timestamp(commit.committer.date)) as quarter,
              date_part(\"month\", timestamp(commit.committer.date)) as month,
              date_part(\"day\", timestamp(commit.committer.date)) as dayOfMonth,
              date_part(\"dow\", timestamp(commit.committer.date)) as dayOfWeek,
              date_part(\"isodow\", timestamp(commit.committer.date)) as `dayOfWeek (ISO)`,
              date_part(\"hour\", timestamp(commit.committer.date)) as hour,
              date_part(\"minute\", timestamp(commit.committer.date)) as minute,
              date_part(\"second\", timestamp(commit.committer.date)) as second,
              date_part(\"millisecond\", timestamp(commit.committer.date)) as millis,
              date_part(\"microsecond\", timestamp(commit.committer.date)) as micros,
              to_string(author.id) as id
              from `../slamengine_commits`",

  "predicate": "containsAtLeast",

  "expected": [
    {
      "id": "33031",
      "millennium": 2, "century": 20, "decade": 201, "year": 2015,
      "doy": 1
    }
  ]
}
