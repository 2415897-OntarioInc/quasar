{
    "name": "triple flatten with mixed content",
    "backends": { "mongodb": "pending" },
    "note": "We should end up with just the most-deeply-nested object fields,
             but because flattening in JS is ignorant of array/object
             distinction, we end up including the results of topObj[*]{*}{*},
             etc.",
    "data": "nested.data",
    "query": "select topObj{*}{*}{*} from nested",
    "predicate": "containsExactly",
    "expected": [{ "topObj": 4 },
                 { "topObj": 5 },
                 { "topObj": 6 },
                 { "topObj": 7 },
                 { "topObj": 8 },
                 { "topObj": 9 },
                 { "topObj": 10 },
                 { "topObj": 11 },
                 { "topObj": 12 },
                 { "topObj": 13 },
                 { "topObj": 14 },
                 { "topObj": 15 },
                 { "topObj": "d" },
                 { "topObj": "e" },
                 { "topObj": "f" },
                 { "topObj": "g" },
                 { "topObj": "h" },
                 { "topObj": "i" },
                 { "topObj": "j" },
                 { "topObj": "k" },
                 { "topObj": "l" },
                 { "topObj": "m" },
                 { "topObj": "n" },
                 { "topObj": "o" }]
}
