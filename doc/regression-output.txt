% ./bin/fallback-it.sh

./sbt it/testOnly *.ResultFileQueryRegressionSpec
[info] Loading global plugins from /c/.sbt/0.13/plugins
[info] Loading project definition from /g/quasar/project/project
[info] Loading project definition from /g/quasar/project
[info] Resolving key references (15355 settings) ...
Redirected /g/quasar/common/target => /c/targets/quasar/common/target
Redirected /g/quasar/frontend/target => /c/targets/quasar/frontend/target
Redirected /g/quasar/macros/target => /c/targets/quasar/macros/target
Redirected /g/quasar/it/target => /c/targets/quasar/it/target
Redirected /g/quasar/effect/target => /c/targets/quasar/effect/target
Redirected /g/quasar/benchmark/target => /c/targets/quasar/benchmark/target
Redirected /g/quasar/marklogic-validation/target => /c/targets/quasar/marklogic-validation/target
Redirected /g/quasar/foundation/target => /c/targets/quasar/foundation/target
Redirected /g/quasar/fallback/target => /c/targets/quasar/fallback/target
Redirected /g/quasar/js/target => /c/targets/quasar/js/target
Redirected /g/quasar/ejson/target => /c/targets/quasar/ejson/target
Redirected /g/quasar/mimir/target => /c/targets/quasar/mimir/target
Redirected /g/quasar/blueeyes/target => /c/targets/quasar/blueeyes/target
Redirected /g/quasar/sql/target => /c/targets/quasar/sql/target
Redirected /g/quasar/postgresql/target => /c/targets/quasar/postgresql/target
Redirected /g/quasar/yggdrasil/target => /c/targets/quasar/yggdrasil/target
Redirected /g/quasar/skeleton/target => /c/targets/quasar/skeleton/target
Redirected /g/quasar/connector/target => /c/targets/quasar/connector/target
Redirected /g/quasar/target => /c/targets/quasar/target
Redirected /g/quasar/web/target => /c/targets/quasar/web/target
Redirected /g/quasar/couchbase/target => /c/targets/quasar/couchbase/target
Redirected /g/quasar/repl/target => /c/targets/quasar/repl/target
Redirected /g/quasar/core/target => /c/targets/quasar/core/target
Redirected /g/quasar/marklogic/target => /c/targets/quasar/marklogic/target
Redirected /g/quasar/interface/target => /c/targets/quasar/interface/target
Redirected /g/quasar/sparkcore/target => /c/targets/quasar/sparkcore/target
Redirected /g/quasar/mongodb/target => /c/targets/quasar/mongodb/target
Redirected /g/quasar/precog/target => /c/targets/quasar/precog/target
[info] Set current project to root (in build file:/g/quasar/)
[info] Compiling 7 Scala sources to /c/targets/quasar/precog/target/scala-2.11/classes...
[warn] there were 16 feature warnings; re-run with -feature for details
[warn] one warning found
[info] Compiling 6 Scala sources to /c/targets/quasar/macros/target/scala-2.11/classes...
[info] Compiling 61 Scala sources and 2 Java sources to /c/targets/quasar/blueeyes/target/scala-2.11/classes...
[warn] /g/quasar/macros/src/main/scala/FacadeBasedInterpolator.scala:25: null is disabled
[warn]     def json(args: Any*): A             = macro JawnFacadeMacros.singleImpl[A]
[warn]                                                                            ^
[warn] /g/quasar/macros/src/main/scala/FacadeBasedInterpolator.scala:26: null is disabled
[warn]     def jsonMany(args: Any*): Vector[A] = macro JawnFacadeMacros.manyImpl[A]
[warn]                                                                          ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:56: asInstanceOf is disabled
[warn]           if (tpe =:= typeOf[String])
[warn]                             ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:60: != is disabled - use =/= or equivalent instead
[warn]         if (stringParts.size != uuids.size + 1)
[warn]                              ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:64: List#last is disabled - use List#lastOption instead
[warn]           ( for ((part, uuid) <- stringParts zip uuids) yield part + """ + uuid + """ ) mkString ("", "", stringParts.last),
[warn]                                                                                                                         ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:47: scala.collection.mutable package is disabled
[warn]         val keys   = scm.Map[String, Tree]()
[warn]                          ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:48: scala.collection.mutable package is disabled
[warn]         val values = scm.Map[String, Tree]()
[warn]                          ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:89: scala.collection.mutable package is disabled
[warn]       val buf            = scm.ListBuffer[A]()
[warn]                                ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:160: null is disabled
[warn]       var key: String = null
[warn]                         ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:163: null is disabled
[warn]       private def clearKey(body: Unit): Unit = key = null
[warn]                                                      ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:165: null is disabled
[warn]         case null => key = arg
[warn]              ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:34: Overloading is disabled
[warn]   private def fail(msg: String): Nothing  = c.abort(c.enclosingPosition, msg)
[warn]               ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:35: Overloading is disabled
[warn]   private def fail(t: Throwable): Nothing = fail("Exception during json interpolation: " + t.getMessage)
[warn]               ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:84: Overloading is disabled
[warn]     def create(): TreeFacade                                                   = create(Map(), Map())
[warn]         ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:85: Overloading is disabled
[warn]     def create(keys: Map[String, Tree], values: Map[String, Tree]): TreeFacade = new TreeFacade(keys, values)
[warn]         ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:145: Overloading is disabled
[warn]       def add(v: Tree): Unit   = value = v
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:146: Overloading is disabled
[warn]       def add(s: String): Unit = add(valueOrLiteral(s))
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:154: Overloading is disabled
[warn]       def add(v: Tree): Unit   = buf += v
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:155: Overloading is disabled
[warn]       def add(s: String): Unit = add(valueOrLiteral(s))
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:164: Overloading is disabled
[warn]       def add(arg: String): Unit = key match {
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:168: Overloading is disabled
[warn]       def add(arg: Tree): Unit = clearKey( buf += jfield(keyOrLiteral(key), arg) )
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:46: var is disabled
[warn]         var uuids  = Vector[String]()
[warn]             ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:143: var is disabled
[warn]       var value: Tree = _
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JValueMacros.scala:160: var is disabled
[warn]       var key: String = null
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:125: asInstanceOf is disabled
[warn]           if (tpe <:< typeOf[String])
[warn]                             ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:129: != is disabled - use =/= or equivalent instead
[warn]         if (stringParts.size != uuids.size + 1)
[warn]                              ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:116: scala.collection.mutable package is disabled
[warn]         val keys    = scm.Map[UUID, Tree]()
[warn]                           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:117: scala.collection.mutable package is disabled
[warn]         val values  = scm.Map[UUID, Tree]()
[warn]                           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:139: Statements must return Unit
[warn]         buf append stringParts.last
[warn]             ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:134: Statements must return Unit
[warn]           buf append part
[warn]               ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:135: Statements must return Unit
[warn]           buf append '"'
[warn]               ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:136: Statements must return Unit
[warn]           buf append uuid.toString
[warn]               ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:70: null is disabled
[warn]       var key: String = null
[warn]                         ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:74: null is disabled
[warn]       private def clearKey[A](body: A): Unit           = discard(key = null)
[warn]                                                                        ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:77: null is disabled
[warn]         case null => key = arg
[warn]              ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:52: Overloading is disabled
[warn]       def add(v: Tree): Unit   = value = v
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:53: Overloading is disabled
[warn]       def add(s: String): Unit = add(valueOrLiteral(s))
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:60: Overloading is disabled
[warn]       def add(v: Tree): Unit   = discard(buf += v)
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:61: Overloading is disabled
[warn]       def add(s: String): Unit = add(valueOrLiteral(s))
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:76: Overloading is disabled
[warn]       def add(arg: String): Unit = key match {
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:80: Overloading is disabled
[warn]       def add(arg: Tree): Unit = clearKey(buf += (keyOrLiteral(key) -> arg))
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:93: Overloading is disabled
[warn]   private def fail(msg: String): Nothing  = c.abort(c.enclosingPosition, msg)
[warn]               ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:94: Overloading is disabled
[warn]   private def fail(t: Throwable): Nothing = fail("Exception during json interpolation: " + t.getMessage)
[warn]               ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:50: var is disabled
[warn]       var value: Tree = _
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:70: var is disabled
[warn]       var key: String = null
[warn]           ^
[warn] /g/quasar/macros/src/main/scala/JawnFacadeMacros.scala:115: var is disabled
[warn]         var uuids   = Vector[UUID]()
[warn]             ^
[warn] 46 warnings found
[warn] there were 5 deprecation warnings; re-run with -deprecation for details
[warn] there were 53 feature warnings; re-run with -feature for details
[warn] two warnings found
[info] Compiling 50 Scala sources to /c/targets/quasar/yggdrasil/target/scala-2.11/classes...
[warn] there were 22 deprecation warnings; re-run with -deprecation for details
[warn] there were 22 unchecked warnings; re-run with -unchecked for details
[warn] there were 66 feature warnings; re-run with -feature for details
[warn] three warnings found
[info] Compiling 36 Scala sources to /c/targets/quasar/mimir/target/scala-2.11/classes...
[warn] there were 6 deprecation warnings; re-run with -deprecation for details
[warn] there were 58 feature warnings; re-run with -feature for details
[warn] two warnings found
Working directory is /var/folders/_6/n9kgsxls56s5wmtlwf4f5tf40000gr/T/fallback8994594232767621466
Running ResultFile Queries [............................................................................................................................................................]
[info] ResultFileQueryRegressionSpec
[info]
[info] fallback FileSystem should
[info]   ResultFile Queries should
[info]     + match regex pattern [./matchRegexPattern.test]
[error]     x double flatten with intervening field [./doubleFlattenWithIntervening.test]
[error]      unmatched expected values 'Set({"botObj":{"$na":null}})' is not empty (file:1)
[info]
[info]     + match on case-insensitive string [./matchCaseInsensitiveRegex.test]
[info]     + handle undefined values [./ifUndefined.test]
[info]     o four different kinds of CASE expressions (switch/match, with and without ELSE) [./caseVariations.test]
[info] skipped
[info]     o reduced expressions which trigger bad field ordering in MongoDB (#598) [./mongodb/fieldOrder.test]
[info] skipped
[info]     + select aliased field sorted by original name [./aliasedFieldSortedByOriginal.test]
[info]     + reduce a literal set with negatives [./literalReductionWithNegative.test]
[info]     + flatten an object resulting from an array projection [./flattenArrayProjection.test]
[info]     + propagate undefined and null in JS [./undefinedJsInExpr.test]
[info]     + concat field with constant array [./concatFieldAndConstant.test]
[info]     + filter on JS with non-JS [./jsWithNonJsFilter.test]
[info]     + negate matches in filter and projection [./negatedRegex.test]
[info]     + filter on list complement [./filterComplement.test]
[info]     + match like pattern [./matchLikePattern.test]
[info]     + long city names in Colorado [./longCitiesWithLength.test]
[info]     + convert epoch milliseconds value to timestamp [./temporal/convertTimestamp.test]
[info]     o wildcard with additional projections and filtering (MongoDB) [./mongodb/wildcardWithExtraProjections.test]
[info] skipped
[info]     + regex on non-string field [./guardedExpression.test]
[info]     o select _id explicitly (MongoDB) [./mongodb/idNotAliased.test]
[info] skipped
[info]     + wildcard with additional projections and filtering [./wildcardWithExtraProjections.test]
[info]     o sort wildcard on expression [./mongodb/sortWildcardOnExpression.test]
[info] skipped
[info]     + filtered distinct of one field [./filteredDistinct.test]
[info]     + unshift aggregation [./unshiftAggregation.test]
[info]     + union [./union.test]
[info]     + regexes in expressions and filter, with fields and constants providing the pattern [./matchRegexPatternWithExpressions.test]
[info]     + filter field in single-element set [./singleElementSet.test]
[info]     + filter on is not null [./null/notNullFilter.test]
[info]     + filter on date part [./temporal/dateFilter.test]
[info]     o combine case (3-arg expr) with group by [./caseWithGroup.test]
[info] skipped
[info]     o unify flattened fields [./unifyFlattenedFields.test]
[info] skipped
[error]     x project unrelated field with object flatten [./projectFieldWithFlatten.test]
[error]      unmatched expected values 'Set({"intro":{"background":{"text":"Britain's American colonies broke with the mother country in 1776 and were recognized as the new nation of the United States of America following the Treaty of Paris in 1783. During the 19th and 20th centuries, 37 new states were added to the original 13 as the nation expanded across the North American continent and acquired a number of overseas possessions. The two most traumatic experiences in the nation's history were the Civil War (1861-65), in which a northern Union of states defeated a secessionist Confederacy of 11 southern slave states, and the Great Depression of the 1930s, an economic downturn during which about a quarter of the labor force lost its jobs. Buoyed by victories in World Wars I and II and the end of the Cold War in 1991, the US remains the world''s most powerful nation state. Since the end of World War II, the economy has achieved relatively steady growth, low unemploy...
[info]
[info]     o expressions with `= null` and `is null`, with missing fields (pending #465) [./null/nullTestExprsWithMissing.test]
[info] skipped
[info]     o cities with largest individual zip codes [./citiesByLargestZip.test]
[info] skipped
[info]     o distinct * (MongoDB) [./mongodb/distinctStar.test]
[info] skipped
[info]     + simple read [./trivial.test]
[error]     x merge differently-nested flattens [./different-flattens.test]
[error]      ; ran out before expected; missing: {"profile":{"name":"Mary Jane","age":29,"title":"Dr"}}; ran out before expected; missing: {"profile":{"name":"Mary Jane","age":29,"title":"Dr"}}; ran out before expected; missing: {"profile":{"name":"Mary Jane","age":29,"title":"Dr"}}; ran out before expected; missing: {"profile":{"name":"Mary Jane","age":29,"title":"Dr"}} (file:1)
[info]
[info]     + population of Boulder-like towns [./boulderLikePop.test]
[error]     ! convert a field to ObjectId [./fakeObjectId.test]
[error]      scala.MatchError: UnaryFunc(Mapping,Converts a string to a (backend-specific) object identifier.,Id,List(Str),quasar.std.Library$$anon$2@41e125b3,quasar.std.Library$class$$Lambda$741/847409766@503e4947,quasar.std.Library$class$$Lambda$751/93163335@1c645763) (of class quasar.UnaryFunc) (MapFunc.scala:699)
[error] quasar.qscript.MapFunc$.quasar$qscript$MapFunc$$$anonfun$106(MapFunc.scala:699)
[error] quasar.qscript.Transform.quasar$qscript$Transform$$$anonfun$49(Transform.scala:482)
[error] quasar.fs.QueryFile$.quasar$fs$QueryFile$$$anonfun$2(QueryFile.scala:72)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$$anonfun$cataM$1.apply(Recursive.scala:37)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:85)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:70)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverse(LogicalPlan.scala:70)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$$anonfun$cataM$1.apply(Recursive.scala:37)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:85)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:70)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverse(LogicalPlan.scala:70)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$$anonfun$cataM$1.apply(Recursive.scala:37)
[error] quasar.contrib.shapeless.package$FuncUtils$.traverse$extension(package.scala:37)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:79)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:70)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverse(LogicalPlan.scala:70)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$$anonfun$cataM$1.apply(Recursive.scala:37)
[error] quasar.contrib.shapeless.package$FuncUtils$.traverse$extension(package.scala:37)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:79)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:70)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverse(LogicalPlan.scala:70)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$Ops$class.cataM(Recursive.scala:29)
[error] matryoshka.Recursive$ops$$anon$1.cataM(Recursive.scala:29)
[error] quasar.fs.QueryFile$.convertAndNormalize(QueryFile.scala:72)
[error] quasar.fs.QueryFile$.convertToQScriptRead(QueryFile.scala:173)
[error] quasar.physical.fallback.fs.corequeryfile$.toQScript$1(corequeryfile.scala:75)
[error] quasar.physical.fallback.fs.corequeryfile$.quasar$physical$fallback$fs$corequeryfile$$qsToProgram$1(corequeryfile.scala:90)
[error] quasar.physical.fallback.fs.corequeryfile$$anon$2.apply(corequeryfile.scala:99)
[error] quasar.physical.fallback.fs.corequeryfile$$anon$2.apply(corequeryfile.scala:94)
[error] quasar.fp.free.package$$anon$4.apply(package.scala:30)
[error] quasar.fp.free.package$$anon$4.apply(package.scala:30)
[error] quasar.fp.free.package$EnrichNT$$anon$2.apply(package.scala:26)
[error] quasar.fp.free.package$EnrichNT$$anon$2.apply(package.scala:26)
[error] quasar.TestConfig$$anon$1.quasar$TestConfig$$anon$1$$$anonfun$6(TestConfig.scala:110)
[info]
[error]     ! servlets with and without init-param (pending #465, #467) [./servlet.test]
[error]      java.lang.RuntimeException: operator '*' expected; "betaServer" (QueryRegressionTest.scala:207)
[error] quasar.regression.QueryRegressionTest.quasar$regression$QueryRegressionTest$$$anonfun$28(QueryRegressionTest.scala:207)
[error] quasar.regression.QueryRegressionTest.testQuery(QueryRegressionTest.scala:208)
[error] quasar.regression.QueryRegressionTest.runTest$1(QueryRegressionTest.scala:124)
[error] quasar.regression.QueryRegressionTest.quasar$regression$QueryRegressionTest$$$anonfun$10(QueryRegressionTest.scala:143)
[info]
[info]     o count grouped joined tables [./joins/groupedJoin.test]
[info] skipped
[error]     ! perform 3-way inner equi-join [./joins/3WayJoin.test]
[error]      java.lang.RuntimeException: non theta join condition found: LeftShift(BucketField(BucketField(BucketField(BucketField(BucketField(BucketField(BucketField(BucketField(BucketField(BucketField(Root,SrcHole,Constant(Str(var))),SrcHole,Constant(Str(folders))),SrcHole,Constant(Str(_6))),SrcHole,Constant(Str(n9kgsxls56s5wmtlwf4f5tf40000gr))),SrcHole,Constant(Str(T))),SrcHole,Constant(Str(fallback8994594232767621466))),SrcHole,Constant(Str(quasar-test))),SrcHole,Constant(Str(run_59138b64))),SrcHole,Constant(Str(regression))),SrcHole,Constant(Str(largeZips))), SrcHole, IncludeId, ConcatArrays(ConcatArrays(ConcatArrays(MakeArray(MakeArray(ProjectIndex(ProjectIndex(ConcatArrays(ConcatArrays(MakeArray(MakeArray(ProjectIndex(RightSide, Constant(Int(0))))), MakeArray(Guard(ProjectIndex(RightSide, Constant(Int(1))), Obj(Map[], Some(Top)), ProjectIndex(RightSide, Constant(Int(1))), Undefined()))), Constant(Arr(List(Str(_id))))), Constant(Int(0))), Constant(Int(0))))), ...
[error] quasar.rethrow$$anon$1.quasar$rethrow$$anon$1$$$anonfun$1(rethrow.scala:33)
[info]
[info]     + concat known array structure [./concatArray.test]
[info]     o expressions with `= null` and `is null` [./null/nullTestExprs.test]
[info] skipped
[error]     ! LIKE with constant-foldable pattern [./likeWithConstantFoldablePattern.test]
[error]      scala.MatchError: TernaryFunc(Mapping,Determines if a string value matches a pattern.,Bool,List(Str, Str, Str),quasar.std.StringLib$$anon$2@665b9a75,quasar.std.Library$class$$Lambda$778/1422460502@34732e0e,quasar.std.Library$class$$Lambda$751/93163335@4b2b609a) (of class quasar.TernaryFunc) (MapFunc.scala:741)
[error] quasar.qscript.MapFunc$.quasar$qscript$MapFunc$$$anonfun$170(MapFunc.scala:741)
[error] quasar.qscript.Transform.quasar$qscript$Transform$$$anonfun$49(Transform.scala:514)
[error] quasar.fs.QueryFile$.quasar$fs$QueryFile$$$anonfun$2(QueryFile.scala:72)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$$anonfun$cataM$1.apply(Recursive.scala:37)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:85)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:70)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverse(LogicalPlan.scala:70)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$$anonfun$cataM$1.apply(Recursive.scala:37)
[error] quasar.contrib.shapeless.package$FuncUtils$.traverse$extension(package.scala:37)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:79)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:70)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverse(LogicalPlan.scala:70)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$$anonfun$cataM$1.apply(Recursive.scala:37)
[error] quasar.contrib.shapeless.package$FuncUtils$.traverse$extension(package.scala:37)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:79)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverseImpl(LogicalPlan.scala:70)
[error] quasar.frontend.logicalplan.LogicalPlan$$anon$1.traverse(LogicalPlan.scala:70)
[error] matryoshka.Recursive$class.cataM(Recursive.scala:37)
[error] matryoshka.Fix$$anon$1.cataM(Fix.scala:25)
[error] matryoshka.Recursive$Ops$class.cataM(Recursive.scala:29)
[error] matryoshka.Recursive$ops$$anon$1.cataM(Recursive.scala:29)
[error] quasar.fs.QueryFile$.convertAndNormalize(QueryFile.scala:72)
[error] quasar.fs.QueryFile$.convertToQScriptRead(QueryFile.scala:173)
[error] quasar.physical.fallback.fs.corequeryfile$.toQScript$1(corequeryfile.scala:75)
[error] quasar.physical.fallback.fs.corequeryfile$.quasar$physical$fallback$fs$corequeryfile$$qsToProgram$1(corequeryfile.scala:90)
[error] quasar.physical.fallback.fs.corequeryfile$$anon$2.apply(corequeryfile.scala:99)
[error] quasar.physical.fallback.fs.corequeryfile$$anon$2.apply(corequeryfile.scala:94)
[error] quasar.fp.free.package$$anon$4.apply(package.scala:30)
[error] quasar.fp.free.package$$anon$4.apply(package.scala:30)
[error] quasar.fp.free.package$EnrichNT$$anon$2.apply(package.scala:26)
[error] quasar.fp.free.package$EnrichNT$$anon$2.apply(package.scala:26)
[error] quasar.TestConfig$$anon$1.quasar$TestConfig$$anon$1$$$anonfun$6(TestConfig.scala:110)
[info]
[error]     x variable with a non-trivial value [./complex-vars.test]
[error]      ; ran out before expected; missing: {"day":"Wednesday"}; ran out before expected; missing: {"day":"Thursday"} (file:1)
[info]
[info]     o union (MongoDB) [./mongodb/union.test]
[info] skipped
[info]     + convert values to/from strings [./convertToFromString.test]
[info]     o join with multiple conditions [./joins/joinWithMultipleConditions.test]
[info] skipped
[info]     + select from a table named by a variable [./var-relation.test]
[info]     o perform inner equi-join with wildcard [./joins/innerEquiJoinWithWildcard.test]
[info] skipped
[info]     o multi-flatten with fields at various depths [./multistageFlatten.test]
[info] skipped
[info]     + convert dates to/from strings [./temporal/toFromString.test]
[info]     + distinct * [./distinctStar.test]
[error]     x top 5 cities by total population [./citiesByTotalPopulation.test]
[error]      ; object[(city,"HAMILTON"),(state,"PA"),(population,0)] does not match object[(city,"CHICAGO"),(state,"IL"),(population,2452177)]; object[(city,"EAST SPRINGFIELD"),(state,"NY"),(population,0)] does not match object[(city,"BROOKLYN"),(state,"NY"),(population,2300504)]; object[(city,"KIRTLAND A F B E"),(state,"NM"),(population,0)] does not match object[(city,"LOS ANGELES"),(state,"CA"),(population,2102295)]; object[(city,"TWIN BRIDGES"),(state,"CA"),(population,0)] does not match object[(city,"HOUSTON"),(state,"TX"),(population,2095918)]; object[(city,"BIG LAUREL"),(state,"KY"),(population,0)] does not match object[(city,"PHILADELPHIA"),(state,"PA"),(population,1610956)] (file:1)
[info]
[error]     x project index with object flatten [./projectIndexWithObjectFlatten.test]
[error]      unmatched expected values 'Set({"parent":{"sha":"3d44ce48fc0670aaf39ba1acd0e1c161f14cc2d6","url":"https://api.github.com/repos/slamdata/slamengine/commits/3d44ce48fc0670aaf39ba1acd0e1c161f14cc2d6","html_url":"https://github.com/slamdata/slamengine/commit/3d44ce48fc0670aaf39ba1acd0e1c161f14cc2d6"},"commit":"https://api.github.com/repos/slamdata/slamengine/git/commits/b8a2302e6a0659875d03bfe4988c000f2ed027a0"}, {"parent":{"sha":"b29d8f254e5df2c4d1792f077625924cd1fde2db","url":"https://api.github.com/repos/slamdata/slamengine/commits/b29d8f254e5df2c4d1792f077625924cd1fde2db","html_url":"https://github.com/slamdata/slamengine/commit/b29d8f254e5df2c4d1792f077625924cd1fde2db"},"commit":"Merge remote-tracking branch 'upstream/master' into ready/445"}, {"parent":{"sha":"b29d8f254e5df2c4d1792f077625924cd1fde2db","url":"https://api.github.com/repos/slamdata/slamengine/commits/b29d8f254e5df2c4d1792f077625924cd1fde2db","html_url":"https://github.com/slamdata/slamen...
[info]
[info]     + dow and isodow [./temporal/days.test]
[info]     + concat unknown with literal array [./concatArrayWithLiteral.test]
[info]     + generated field names [./generatedFieldNames.test]
[info]     o convert dates to/from strings (MongoDB) [./mongodb/temporal/toFromString.test]
[info] skipped
[error]     x group by a computed value [./groupByExpression.test]
[error]      unmatched expected values 'Set({"first":"B","numZips":2344}, {"first":"O","numZips":767}, {"first":"T","numZips":955}, {"first":"X","numZips":2}, {"first":"U","numZips":165}, {"first":"F","numZips":1091}, {"first":"W","numZips":1834}, {"first":"C","numZips":2692}, {"first":"H","numZips":1621}, {"first":"M","numZips":2348}, {"first":"Z","numZips":48}, {"first":"A","numZips":1398}, {"first":"S","numZips":2871})' is not empty (file:1)
[info]
[error]     x flatten one side of a join condition [./nonJsJoinCondition.test]
[error]      unexpected value 'Some({"city1":"AGAWAM","loc":[-72.622739,42.070206],"city2":"AGAWAM","pop":15338})' is not None (file:1)
[info]
[error]     x filter with date literals [./temporal/filterOnDate.test]
[error]      unmatched expected values 'Set({"day":"Monday"}, {"day":"Wednesday"}, {"day":"Friday"})' is not empty (file:1)
[info]
[info]     + filter on time_of_day [./temporal/time.test]
[error]     x skip and count [./skipCount.test]
[error]      ; ran out before expected; missing: {"0":29343} (file:1)
[info]
[error]     x flatten a single field as both object and array [./multitypeFlatten.test]
[error]      unmatched expected values 'Set({"value":{"_id":{"$oid":"55538123d86735b7268fd004"},"foo":[15,[{"baz":["quux"]}]]}}, {"value":{"_id":{"$oid":"55538123d86735b7268fd005"},"foo":["15z",[{"baz":["qx"]}]]}}, {"value":{"_id":{"$oid":"55538123d86735b7268fd008"},"foo":{"bar":15,"baz":["qx"]}}}, {"value":{"_id":{"$oid":"55538123d86735b7268fd009"},"foo":{"bar":"a15","baz":["qx"]}}})' is not empty (file:1)
[info]
[info]     + flatten object [./flattenObject.test]
[info]     + filter with pipeline using variables in query [./filter-vars.test]
[info]     o flattening both sides of a join condition [./symmetricNonJsJoinCondition.test]
[info] skipped
[error]     x select over fields with same name [./sameFieldName.test]
[error]      unmatched expected values 'Set({"name":"emma","name0":"RangeRover-Evoque"}, {"name":"scott","name0":"Honda-civic"})' is not empty (file:1)
[info]
[info]     + filter, skip, limit, and count [./filterSkipLimitCount.test]
[info]     + filter field “in” a bare value [./inBareElement.test]
[error]     x filter by JS expression, with only reducing projections [./filterByJsWithOnlyReducing.test]
[error]      unexpected value 'Some({"max_pop":85710,"min_city":"LYNN"})' is not None (file:1)
[info]
[info]     + handle let as project of select [./letInSelectProjection.test]
[info]     + convert values from strings [./convertFromString.test]
[info]     + filter on date part, where the field isn't a timestamp [./temporal/invalidDateFilter.test]
[info]     + filter on is null [./null/nullFilter.test]
[error]     x triple flatten with mixed content [./tripleFlatten.test]
[error]      ; object[(topObj,10)] does not match object[(topObj,{"$na":null})]; object[(topObj,11)] does not match object[(topObj,{"$na":null})]; object[(topObj,12)] does not match object[(topObj,"m")]; object[(topObj,"j")] does not match object[(topObj,"n")]; object[(topObj,"k")] does not match object[(topObj,"o")]; had more than expected: {"topObj":"l"}; had more than expected: {"topObj":13}; had more than expected: {"topObj":14}; had more than expected: {"topObj":15}; had more than expected: {"topObj":"m"}; had more than expected: {"topObj":"n"}; had more than expected: {"topObj":"o"} (file:1)
[info]
[info]     o project index from group (MongoDB) [./mongodb/projectIndexFromGroup.test]
[info] skipped
[error]     x shortest city names [./shortCities.test]
[error]      ; object[(city,"EAST HIGHLAND")] does not match object[(city,"M M")]; object[(city,"BARSTOW")] does not match object[(city,"RYE")]; object[(city,"WALDEN")] does not match object[(city,"ABAC")]; object[(city,"BYERS")] does not match object[(city,"AIEA")]; object[(city,"HUBER")] does not match object[(city,"ALTA")] (file:1)
[info]
[info]     o unify flattened fields with unflattened field [./unifyFlattenedFieldsWithUnflattened.test]
[info] skipped
[info]     + constant and a grouped value [./constantAndGrouped.test]
[info]     + filter on simple JS [./simpleJsFilter.test]
[info]     o date_part with (virtually) all selectors, after conversion to JS (see #1238) [./temporal/datePartsConverted.test]
[info] skipped
[info]     + handle nested let binding and selects [./letBinding.test]
[info]     + date_part, after conversion to JS (see #1238) [./temporal/datePartsConvertedSimple.test]
[info]     + count distinct [./countDistinct.test]
[info]     + count occurrences of each value of length(city), with filtering [./zipsByCityLength.test]
[info]     + filter with complex query involving not [./filterWithComplexNot.test]
[error]     x sort wildcard on expression [./sortWildcardOnExpression.test]
[error]      ; object[(city,"BROWDER"),(state,"KY"),(pop,0),(_id,"42326"),(loc,[-86.978197,37.259333])] does not match object[(city,"CHICAGO"),(state,"IL"),(pop,112047.0),(_id,"60623"),(loc,[-87.7157,41.849015])]; object[(city,"CHEYENNE MTN AFB"),(state,"CO"),(pop,0),(_id,"80914"),(loc,[-104.719052,38.784241])] does not match object[(city,"BROOKLYN"),(state,"NY"),(pop,111396.0),(_id,"11226"),(loc,[-73.956985,40.646694])]; object[(city,"ELK SPRINGS"),(state,"CO"),(pop,10),(_id,"81633"),(loc,[-108.419729,40.414588])] does not match object[(city,"NEW YORK"),(state,"NY"),(pop,106564.0),(_id,"10021"),(loc,[-73.958805,40.768476])]; object[(city,"POWDERHORN"),(state,"CO"),(pop,11),(_id,"81243"),(loc,[-107.108449,38.282165])] does not match object[(city,"NEW YORK"),(state,"NY"),(pop,100027.0),(_id,"10025"),(loc,[-73.968312,40.797466])]; object[(city,"TRINCHERA"),(state,"CO"),(pop,21),(_id,"81081"),(loc,[-104.118354,37.075662])] does not match object[(city,"BELL GARDENS"),(s...
[info]
[info]     o cross join with conditions that must be pushed ahead of the join (or else the join explodes, taking several minutes to complete) [./joins/crossJoinWithOneSidedConditions.test]
[info] skipped
[error]     x wildcard with projection and synthetic field [./orderedWildcardWithProjection.test]
[error]      ; object[(city,"BROWDER"),(dpop,0),(state,"KY"),(pop,0),(_id,"42326"),(loc,[-86.978197,37.259333])] does not match object[(city,"CHICAGO"),(dpop,1120470.0),(state,"IL"),(pop,112047.0),(_id,"60623"),(loc,[-87.7157,41.849015])]; object[(city,"CHEYENNE MTN AFB"),(dpop,0),(state,"CO"),(pop,0),(_id,"80914"),(loc,[-104.719052,38.784241])] does not match object[(city,"BROOKLYN"),(dpop,1113960.0),(state,"NY"),(pop,111396.0),(_id,"11226"),(loc,[-73.956985,40.646694])]; object[(city,"ELK SPRINGS"),(dpop,100),(state,"CO"),(pop,10),(_id,"81633"),(loc,[-108.419729,40.414588])] does not match object[(city,"NEW YORK"),(dpop,1065640.0),(state,"NY"),(pop,106564.0),(_id,"10021"),(loc,[-73.958805,40.768476])]; object[(city,"POWDERHORN"),(dpop,110),(state,"CO"),(pop,11),(_id,"81243"),(loc,[-107.108449,38.282165])] does not match object[(city,"NEW YORK"),(dpop,1000270.0),(state,"NY"),(pop,100027.0),(_id,"10025"),(loc,[-73.968312,40.797466])]; object[(city,"TRINCHERA"),(dpop...
[info]
[error]     x job postings by city  [./LocationCount.test]
[error]      ; ran out before expected; missing: {"counter":3,"location":"Boston"}; ran out before expected; missing: {"counter":2,"location":"Denver"}; ran out before expected; missing: {"counter":1,"location":"Boulder"} (file:1)
[info]
[info]     o simple join written in 'cross join' form (must be optimized to an inner join or else the join explodes, taking several minutes to complete) [./joins/crossJoin.test]
[info] skipped
[info]     + group by array [./groupByArray.test]
[info]     + wildcard with sort [./wildcardWithSort.test]
[info]     o unshift aggregation (MongoDB) [./mongodb/unshiftAggregation.test]
[info] skipped
[info]     o project from static concatted array prefix [./projectFromConcattedArrayPrefix.test]
[info] skipped
[error]     x states sorted by the length of name of their first city, alphabetically [./statesByShortestFirstCity.test]
[error]      ; object[(state,"NE"),(first,"ABIE"),(len,4)] does not match object[(state,"MI"),(first,"ADA"),(len,3)]; object[(state,"HI"),(first,"AIEA"),(len,4)] does not match object[(state,"OK"),(first,"ADA"),(len,3)]; object[(state,"OK"),(first,"ALEX"),(len,4)] does not match object[(state,"GA"),(first,"ABAC"),(len,4)]; object[(state,"CT"),(first,"AVON"),(len,4)] does not match object[(state,"NE"),(first,"ABIE"),(len,4)]; object[(state,"DE"),(first,"BEAR"),(len,4)] does not match object[(state,"WY"),(first,"ACME"),(len,4)] (file:1)
[info]
[error]     x largest cities [./largestCities.test]
[error]      ; object[(city,"HAMILTON"),(state,"PA"),(total,0)] does not match object[(city,"CHICAGO"),(state,"IL"),(total,2452177)]; object[(city,"EAST SPRINGFIELD"),(state,"NY"),(total,0)] does not match object[(city,"BROOKLYN"),(state,"NY"),(total,2300504)]; object[(city,"KIRTLAND A F B E"),(state,"NM"),(total,0)] does not match object[(city,"LOS ANGELES"),(state,"CA"),(total,2102295)]; object[(city,"TWIN BRIDGES"),(state,"CA"),(total,0)] does not match object[(city,"HOUSTON"),(state,"TX"),(total,2095918)]; object[(city,"BIG LAUREL"),(state,"KY"),(total,0)] does not match object[(city,"PHILADELPHIA"),(state,"PA"),(total,1610956)]; object[(city,"KENT"),(state,"OR"),(total,0)] does not match object[(city,"NEW YORK"),(state,"NY"),(total,1476790)]; object[(city,"FULTON"),(state,"TX"),(total,0)] does not match object[(city,"BRONX"),(state,"NY"),(total,1209548)]; object[(city,"BROWDER"),(state,"KY"),(total,0)] does not match object[(city,"SAN DIEGO"),(state,"CA"),(tota...
[info]
[info]     + sort, project, and limit [./sortProjectLimit.test]
[error]     x group by flattened field [./groupByFlatten.test]
[error]      unexpected value 'Some({"0":"a","1":1})' is not None (file:1)
[info]
[info]     + filter with negated regex selector [./filterWithNot.test]
[info]     + filter on contains [./filterOnContains.test]
[info]     + distinct of one field [./singleFieldDistinct.test]
[info]     + filter on field comparison [./filterOnFieldComparison.test]
[info]     + handle select in form of let [./letBindingSelect.test]
[info]     + select wildcard with group by [./groupAndWildcard.test]
[info]     + explicitly grouped, with only reduced projections, and a filter [./groupAndFilterWithNoUnreduced.test]
[info]     + numeric field names [./numericFieldNames.test]
[info]     o project from non-static concatted array [./projectFromConcattedArray.test]
[info] skipped
[info]     o join where the left hand side is constant [./joins/constantOnLeft.test]
[info] skipped
[info]     + many simple projections (order matters) [./manySimpleProjections.test]
[info]     + implicitly grouped, with filtering [./implicitGroupWithFilter.test]
[info]     + case-insensitive regex in projections [./projectCaseInsensitiveRegex.test]
[info]     o project index from group with filter [./projectIndexFromGroupWithFilter.test]
[info] skipped
[info]     o filter, sort, and limit [./filterSortLimit.test]
[info] skipped
[info]     o join with complex conditions [./joins/joinWithComplexCondition.test]
[info] skipped
[error]     x project index from group [./projectIndexFromGroup.test]
[error]      unmatched expected values 'Set({"sha":"3d44ce48fc0670aaf39ba1acd0e1c161f14cc2d6","count":1}, {"sha":"9897104b5a22571a5940f4ba2ba89addaef81ed0","count":1}, {"sha":"82e67fef1aae1d283bff90d1d27efd4266d26d49","count":2}, {"sha":"166f7337c8fd5db13941abf482de05accb8e9380","count":1}, {"sha":"92245a05c6b851a97883d9276889b4f6f09fff9d","count":1}, {"sha":"56d1caf5d082d1a6840090986e277d36d03f1859","count":4}, {"sha":"696c6ff2556bb1ea6a6de86a03736058e8f6c52a","count":1}, {"sha":"a31c0a8f2d0f771cf2aecb67c9822f930c260c29","count":2}, {"sha":"b29d8f254e5df2c4d1792f077625924cd1fde2db","count":1})' is not empty (file:1)
[info]
[info]     + match like complement [./matchLikeComplement.test]
[info]     + flatten array [./flattenArray.test]
[info]     + convert null to/from strings [./null/toFromString.test]
[info]     + flatten a flattened field [./doubleFlatten.test]
[info]     + count distinct * [./countDistinctStar.test]
[error]     x filter on time_of_day (MongoDB) [./mongodb/temporal/time.test]
[error]      unexpected value 'Some({"day":"Tuesday","tod":{"$time":"08:00:00.000"},"not a date":{"$na":null},"missing":{"$na":null}})' is not None (file:1)
[info]
[info]     + filter on list membership [./filterMembership.test]
[info]     + simple distinct [./simpleDistinct.test]
[info]     o wildcard with projection and synthetic field (MongoDB) [./mongodb/orderedWildcardWithProjection.test]
[info] skipped
[info]     o select wildcard and field (MongoDB) [./mongodb/selectWildcardAndField.test]
[info] skipped
[info]     o join with reversed condition and complex condition expression [./joins/joinWithReversedCondition.test]
[info] skipped
[error]     x splice a wildcard with multiple constants [./wildcardWithMultipleConstants.test]
[error]      matched but field order differs 'Set({"city":"CUSHMAN","state":"MA","pop":36963,"_id":"01002","two":"2","loc":[-72.51565,42.377017],"one":"1"}, {"city":"MONTGOMERY","state":"MA","pop":40117,"_id":"01085","two":"2","loc":[-72.754318,42.129484],"one":"1"}, {"city":"HOLYOKE","state":"MA","pop":43704,"_id":"01040","two":"2","loc":[-72.626193,42.202007],"one":"1"}, {"city":"WEST SPRINGFIELD","state":"MA","pop":27537,"_id":"01089","two":"2","loc":[-72.641109,42.115066],"one":"1"}, {"city":"SPRINGFIELD","state":"MA","pop":25519,"_id":"01108","two":"2","loc":[-72.558432,42.085314],"one":"1"}, {"city":"FLORENCE","state":"MA","pop":27939,"_id":"01060","two":"2","loc":[-72.654245,42.324662],"one":"1"}, {"city":"CHICOPEE","state":"MA","pop":31495,"_id":"01020","two":"2","loc":[-72.576142,42.176443],"one":"1"})' is not empty (file:1)
[info]
[info]     o unify flattened fields with multiple shape-preserving ops. [./unifyFlattenedFieldsWithMultipleUses.test]
[info] skipped
[info]     + sort by JS expression with filter [./sortByJS.test]
[info]     o largest zips [./largestZips.test]
[info] skipped
[info]     + select wildcard and field [./selectWildcardAndField.test]
[info]     + population of Boulder [./boulderPop.test]
[info]     o perform inner equi-join [./joins/innerEquiJoin.test]
[info] skipped
[info]     + concat BETWEEN with other fields [./concatBetween.test]
[info]     + trivial group by [./trivialGroup.test]
[info]     o join the results of a pair of sub-queries [./joins/joinSubSelects.test]
[info] skipped
[info]     o simple $project with one renamed field and one unchanged (see #598) [./mongodb/simpleProjectWithOneRenamed.test]
[info] skipped
[info]     + delete [./delete.test]
[info]     + select array element [./selectArrayElement.test]
[info]     o flatten a grouped object with filter [./flattenGroupedObject.test]
[info] skipped
[info]     + select _id as zip [./idAliased.test]
[info]     + filter with pipeline and JS [./filter.test]
[info]     o filter on contains (MongoDB) [./mongodb/filterOnContains.test]
[info] skipped
[info]     + filter on `!= null` [./null/nullComparison.test]
[info]     o timestamp and interval syntax [./temporal/timestampsAndIntervals.test]
[info] skipped
[info]     o order join by alias [./joins/orderJoinByAlias.test]
[info] skipped
[info]     + match on ObjectId [./filterOnOid.test]
[info]     + concat array with unknown structure [./concatArrayWithUnknown.test]
[info]     o match LIKE with multiple lines [./multilineLike.test]
[info] skipped
[info]     o flatten array with unflattened field [./flattenArrayWithUnflattened.test]
[info] skipped
[info]     + flatten an object inside a field projection [./flattenNestedObject.test]
[info]     o filter on field comparison (MongoDB) [./mongodb/filterOnFieldComparison.test]
[info] skipped
[info]
[info]
[info] Total for specification ResultFileQueryRegressionSpec
[info] Finished in 31 seconds, 609 ms
[info] 156 examples, 383 expectations, 24 failures, 4 errors, 45 skipped
[info]
[info] ScalaCheck
[info] Passed: Total 0, Failed 0, Errors 0, Passed 0
[error] Error: Total 156, Failed 24, Errors 4, Passed 83, Skipped 45
[error] Error during tests:
[error]   quasar.ResultFileQueryRegressionSpec
[error] (it/test:testOnly) sbt.TestsFailedException: Tests unsuccessful
[error] Total time: 237 s, completed Dec 16, 2016 11:14:59 AM
